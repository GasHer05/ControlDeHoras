import { db } from "../config/firebase";
import { collection, addDoc, getDocs } from "firebase/firestore";

// Funci√≥n para probar la conexi√≥n a Firebase
export const testFirebaseConnection = async () => {
  try {
    console.log("üîç Probando conexi√≥n a Firebase...");

    // Intentar obtener documentos de una colecci√≥n de prueba
    const testCollection = collection(db, "test");
    const querySnapshot = await getDocs(testCollection);

    console.log("‚úÖ Conexi√≥n a Firebase exitosa!");
    console.log(`üìä Documentos en colecci√≥n test: ${querySnapshot.size}`);

    return {
      success: true,
      message: "Conexi√≥n a Firebase exitosa",
      documentCount: querySnapshot.size,
    };
  } catch (error) {
    console.error("‚ùå Error conectando a Firebase:", error);
    return {
      success: false,
      message: error.message,
      error: error,
    };
  }
};

// Funci√≥n para crear un documento de prueba
export const createTestDocument = async () => {
  try {
    console.log("üìù Creando documento de prueba...");

    const testData = {
      message: "Test de conexi√≥n Firebase",
      timestamp: new Date(),
      project: "registro-de-horas",
    };

    const docRef = await addDoc(collection(db, "test"), testData);

    console.log("‚úÖ Documento de prueba creado con ID:", docRef.id);

    return {
      success: true,
      documentId: docRef.id,
      message: "Documento de prueba creado exitosamente",
    };
  } catch (error) {
    console.error("‚ùå Error creando documento de prueba:", error);
    return {
      success: false,
      message: error.message,
      error: error,
    };
  }
};

// Funci√≥n para limpiar documentos de prueba
export const cleanupTestDocuments = async () => {
  try {
    console.log("üßπ Limpiando documentos de prueba...");

    const testCollection = collection(db, "test");
    const querySnapshot = await getDocs(testCollection);

    // Nota: En producci√≥n, deber√≠as usar deleteDoc para eliminar documentos
    // Por ahora solo contamos cu√°ntos hay
    console.log(`üìä Documentos de prueba encontrados: ${querySnapshot.size}`);

    return {
      success: true,
      message: "Limpieza completada",
      documentCount: querySnapshot.size,
    };
  } catch (error) {
    console.error("‚ùå Error limpiando documentos de prueba:", error);
    return {
      success: false,
      message: error.message,
      error: error,
    };
  }
};
